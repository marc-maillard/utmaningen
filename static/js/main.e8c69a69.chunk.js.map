{"version":3,"sources":["components/utmaningenTheme.js","components/History.js","components/nav_bar/DrawerMenu.js","components/nav_bar/ButtonAppBar.js","components/NotFound.js","components/challenges/ChallengeCard.js","components/challenges/FabAddButton.js","components/challenges/Boxngrids.js","components/challenges/index.js","components/dummy.js","components/Routes.js","App.js","serviceWorker.js","index.js"],"names":["primary","dark","main","light","utmaningenTheme","createMuiTheme","palette","secondary","background","default","grey","overrides","MuiAvatar","colorDefault","backgroundColor","history","basename","DrawerMenu","props","menuItems","id","title","route","icon","FilterHdrIcon","iconColor","theme","NoteAddIcon","SwipeableDrawer","anchor","open","onClose","toggleDrawer","onOpen","List","map","menuItem","ListItem","key","button","onClick","ListItemIcon","htmlColor","ListItemText","useStyles","makeStyles","root","flexGrow","menuButton","marginRight","spacing","offset","mixins","toolbar","ButtonAppBar","classes","useState","openState","setOpenState","setTitle","target","event","type","console","log","newTarget","push","className","AppBar","position","Toolbar","IconButton","edge","color","aria-label","Typography","variant","warning","getContrastText","NotFound","Box","mx","mt","Card","CardHeader","avatar","Avatar","CardContent","ChallengeCard","Grid","item","CardActionArea","subheader","FabAddButton","Fab","margin","top","right","bottom","left","handleClick","itemKey","Boxngrids","Fragment","container","direction","dummy","Routes","path","exact","to","component","Challenges","Component","App","useTheme","Utmaningentheme","CssBaseline","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e8c69a69.chunk.js","sourcesContent":["import { grey } from \"@material-ui/core/colors\";\n\nimport { unstable_createMuiStrictModeTheme as createMuiTheme } from \"@material-ui/core/styles\";\n\nconst primary = {\n  dark: \"#005ecb\",\n  main: \"#448aff\",\n  light: \"#83b9ff\",\n};\n\nconst secondary = {\n  dark: \"#c60055\",\n  main: \"#ff4081\",\n  light: \"#ff79b0\",\n};\n\nconst utmaningenTheme = createMuiTheme({\n  palette: {\n    primary: primary,\n    secondary: secondary,\n    background: {\n      default: grey[50],\n    },\n  },\n  overrides: {\n    MuiAvatar: {\n      colorDefault: {\n        backgroundColor: primary.main,\n      },\n    },\n  },\n});\n\nexport default utmaningenTheme;\n","import { createBrowserHistory as history } from \"history\";\n\nexport default history({ basename: \"/utmaningen\" });\n","import React from \"react\";\n\nimport {\n  SwipeableDrawer,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n} from \"@material-ui/core\";\n\nimport FilterHdrIcon from \"@material-ui/icons/FilterHdr\";\nimport NoteAddIcon from \"@material-ui/icons/NoteAdd\";\n\nfunction DrawerMenu(props) {\n  const menuItems = [\n    {\n      id: 1,\n      title: \"Challenges\",\n      route: \"challenges\",\n      icon: FilterHdrIcon,\n      iconColor: props.theme.palette.primary.main,\n    },\n    {\n      id: 2,\n      title: \"Log book\",\n      route: \"log\",\n      icon: NoteAddIcon,\n      iconColor: props.theme.palette.secondary.main,\n    },\n  ];\n\n  return (\n    <SwipeableDrawer\n      anchor=\"left\"\n      open={props.open}\n      onClose={props.toggleDrawer(false)}\n      onOpen={props.toggleDrawer(true)}\n    >\n      <List>\n        {menuItems.map((menuItem) => (\n          <ListItem\n            key={menuItem.id}\n            button\n            onClick={props.toggleDrawer(false, {\n              route: menuItem.route,\n              title: menuItem.title,\n            })}\n          >\n            <ListItemIcon>\n              <menuItem.icon htmlColor={menuItem.iconColor} />\n            </ListItemIcon>\n            <ListItemText primary={menuItem.title} />\n          </ListItem>\n        ))}\n      </List>\n    </SwipeableDrawer>\n  );\n}\n\nexport default DrawerMenu;\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\n\nimport history from \"../History\";\nimport DrawerMenu from \"./DrawerMenu\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  offset: {\n    ...theme.mixins.toolbar,\n    flexGrow: 1,\n  },\n}));\n\nexport default function ButtonAppBar(props) {\n  const classes = useStyles();\n  const [openState, setOpenState] = useState(false);\n  const [title, setTitle] = useState(\"Challenges\");\n\n  const toggleDrawer = (open, target) => (event) => {\n    if (\n      event &&\n      event.type === \"keydown\" &&\n      (event.key === \"Tab\" || event.key === \"Shift\")\n    ) {\n      return;\n    }\n    setOpenState(open);\n    console.log(\"target: \", target);\n    console.log(\"new togglestate: \", open);\n    if (\n      target &&\n      target.route &&\n      target.title &&\n      target.route !== \"\" &&\n      target.title !== \"\"\n    ) {\n      setTitle(target.title);\n      const newTarget = \"/\" + target.route;\n      console.log(\"new target: \", newTarget);\n      history.push(newTarget);\n    }\n  };\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"fixed\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"menu\"\n            onClick={toggleDrawer(true)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            {title}\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <DrawerMenu\n        open={openState}\n        toggleDrawer={toggleDrawer}\n        theme={props.theme}\n      />\n      <div className={classes.offset} theme={props.theme} />\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardContent,\n  CardHeader,\n  Typography,\n} from \"@material-ui/core\";\n\nimport WarningIcon from \"@material-ui/icons/Warning\";\nimport { makeStyles } from \"@material-ui/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  warning: {\n    color: theme.palette.getContrastText(theme.palette.warning.main),\n    backgroundColor: theme.palette.warning.main,\n  },\n}));\n\nfunction NotFound() {\n  const classes = useStyles();\n  return (\n    <Box mx={6} mt={3}>\n      <Card>\n        <CardHeader\n          title=\"404 page not found\"\n          avatar={\n            <Avatar className={classes.warning}>\n              <WarningIcon />\n            </Avatar>\n          }\n        />\n        <CardContent>\n          <Typography>\n            We are sorry but the page you are looking for does not exist.\n          </Typography>\n        </CardContent>\n      </Card>\n    </Box>\n  );\n}\n\nexport default NotFound;\n","import React from \"react\";\n\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { CardActionArea, Grid } from \"@material-ui/core\";\n\nfunction ChallengeCard(props) {\n  console.log();\n  return (\n    <Grid item>\n      <Card>\n        <CardActionArea onClick={props.onClick}>\n          <CardHeader\n            avatar={<Avatar aria-label=\"recipe\">{props.avatar}</Avatar>}\n            title={props.title}\n            subheader={props.subheader}\n          />\n        </CardActionArea>\n      </Card>\n    </Grid>\n  );\n}\n\nexport default ChallengeCard;\n","import React from \"react\";\n\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\n\nfunction FabAddButton(props) {\n  const classes = props.className;\n  return (\n    <Fab className={classes} color=\"secondary\" aria-label=\"add\">\n      <AddIcon />\n    </Fab>\n  );\n}\n\nexport default FabAddButton;\n","import React from \"react\";\n\nimport { Box, Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport ChallengeCard from \"./ChallengeCard\";\nimport FabAddButton from \"./FabAddButton\";\n\nconst useStyles = makeStyles((theme) => ({\n  Fab: {\n    margin: 0,\n    top: \"auto\",\n    right: 20,\n    bottom: 20,\n    left: \"auto\",\n    position: \"fixed\",\n  },\n}));\n\nfunction handleClick(itemKey) {\n  console.log(\"item clicked \", itemKey);\n}\n\nfunction Boxngrids(props) {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <Box mx={3} mt={3}>\n        <Grid container direction={\"column\"} spacing={2}>\n          <ChallengeCard\n            onClick={() => handleClick(\"1\")}\n            avatar={\"MA\"}\n            title={\"Marc och Anna sept-okt 2020\"}\n            subheader={\"September 14, 2020 - October 31 2020\"}\n          ></ChallengeCard>\n          <ChallengeCard\n            onClick={() => handleClick(\"2\")}\n            avatar={\"MA\"}\n            title={\"Marc och Anna sept-okt 2020\"}\n            subheader={\"September 14, 2020 - October 31 2020\"}\n          ></ChallengeCard>\n          <ChallengeCard\n            onClick={() => handleClick(\"3\")}\n            avatar={\"MA\"}\n            title={\"Marc och Anna sept-okt 2020\"}\n            subheader={\"September 14, 2020 - October 31 2020\"}\n          ></ChallengeCard>\n        </Grid>\n      </Box>\n      <FabAddButton className={classes.Fab} />\n    </React.Fragment>\n  );\n}\n\nexport default Boxngrids;\n","import Boxngrids from \"./Boxngrids\";\n\nexport default Boxngrids;\n","import React from \"react\";\n\nfunction dummy(props) {\n  return <div>tjena!</div>;\n}\n\nexport default dummy;\n","import React, { Component } from \"react\";\nimport { Route, Router, Switch, Redirect } from \"react-router-dom\";\nimport NotFound from \"./NotFound\";\nimport Challenges from \"./challenges/\";\nimport dummy from \"./dummy\";\n\nimport history from \"./History\";\n\nclass Routes extends Component {\n  render() {\n    return (\n      <Router history={history}>\n        <Switch>\n          <Route path=\"/\" exact>\n            <Redirect push to=\"/challenges\" />\n          </Route>\n          <Route path=\"/challenges\" exact component={Challenges} />\n          <Route path=\"/log\" component={dummy} />\n          <Route path=\"*\">\n            <NotFound />\n          </Route>\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default Routes;\n","import React from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"./App.css\";\nimport Utmaningentheme from \"./components/utmaningenTheme\";\nimport { MuiThemeProvider } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nimport { Box } from \"@material-ui/core\";\nimport ButtonAppBar from \"./components/nav_bar/ButtonAppBar\";\nimport Routes from \"./components/Routes\";\nimport { useTheme } from \"@material-ui/core/styles\";\n\nfunction App() {\n  const theme = useTheme();\n  return (\n    <Router>\n      <MuiThemeProvider theme={Utmaningentheme}>\n        <CssBaseline />\n        <Box>\n          <ButtonAppBar theme={theme} />\n          <Routes />\n        </Box>\n      </MuiThemeProvider>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}